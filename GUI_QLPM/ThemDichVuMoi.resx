<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABILAAASCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAoAAAARAAAAEwAA
        ABMAAAATAAAAEwAAABMAAAATAAAAEQAAAAoAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKAAAAIgAA
        ADUAAAA6AAAAOgAAADoAAAA6AAAAOgAAADoAAAA1AAAAIgAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALdd
        K4jDZC7/xWYv/8dnL//JaDD/ymow/8xrMf/ObDH/z24y/6JWJ6UAAAA1AAAAEQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAwmMu//fBg//1pEL/9aM///akQP/2pkD/96dC//ioRP/2pkb/0nAz/wAAADoAAAATAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADCZC7/+siJ/+OCN//lhjr/54o9/+mNQP/rkUL/7ZVG//mqSf/TcTP/AAAAOgAA
        ABMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAMNkLv/6yIn/3nk2/+B9Of/jgj3/5YdA/+iLRP/qkEf/+atL/9Rx
        M/8AAAA6AAAAEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAw2Qu//rIif/eeTf/4X46/+ODPv/miEH/6I1F/+uS
        SP/5rEz/1XIz/wAAADoAAAATAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADDZC7/+siJ/996N//hfzr/5IQ+/+aI
        Qv/pjUX/65JJ//qsTf/VcjP/AAAAOgAAABMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMNkLv/6yIn/33o3/+F/
        O//khD7/5ohC/+mORv/rk0n/+qxN/9VyM/8AAAA6AAAAEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAw2Qu//rI
        if/fejf/4X46/+ODPv/miEH/6I1F/+uSSf/6rE3/1HEz/wAAADoAAAATAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAKAAAAEQAAABMAAAATAAAAEwAAABMAAAATAAAAEwAA
        ABPCYy7/+siJ/955Nv/gfTr/44I9/+WHQP/ojET/6pFI//mrS//TcDP/AAAAPwAAACIAAAATAAAAEwAA
        ABMAAAATAAAAEwAAABMAAAATAAAAEQAAAAoAAAACAAAACgAAACIAAAA1AAAAOgAAADoAAAA6AAAAOgAA
        ADoAAAA6AAAAOsJjLv/6yIn/3ng1/+B8Of/igTz/5IU//+eKQ//pj0b/+atK/9JvMv8AAABIAAAAPwAA
        ADoAAAA6AAAAOgAAADoAAAA6AAAAOgAAADoAAAA1AAAAIgAAAAqlTyaIsFUp/8FnLP/DaC3/xGku/8Zr
        Lv/IbC//yW4v/8tvMP/McDH/znIx//rHif/ddjT/33s3/+F/O//jgz7/5ohB/+iMRP/4qkf/2344/9x+
        Of/dfzr/3YA6/96AO//egTv/3YA7/92AOv/cfzn/0W8y/6FVJ6UAAAA1AAAAEa5TKP/zvoP/8aBC//Gd
        Pf/xnT7/8Zw7//GaOP/xmzn/8pw6//KdO//znzv/+Lhs/9x1M//eeTb/4H05/+KBPP/khT//5olC//ip
        Rf/4qkj/+atK//msTP/6rE7/+q1P//qtT//6rU//+qxN//mrTP/2p0j/zmwx/wAAADoAAAATrVMo//jF
        if/RZzP/0mgz/9NpNP/UazX/1Goy/9NjKP/UZCf/1Wgp/9drLP/Zby//23My/913Nf/fezf/4X46/+OC
        Pf/lhkD/54pC/+iNRf/qkEf/65JJ/+yUSv/slUv/7ZVL/+yVS//slEr/7phI//ipR//MazH/AAAAOgAA
        ABOtUij/+MWJ/9FmMv/SaDP/02k0/9RrNP/VbTb/1m83/9ZsMf/VZyr/1mkr/9htLf/acTD/3HQz/954
        Nf/gfDj/4X87/+OCPf/lhkD/5olC/+eLRP/pjUX/6Y9G/+qQR//qkEj/6pBH/+mPRv/slEX/+KhD/8tq
        MP8AAAA6AAAAE6xSKP/4xYn/0WUy/9JnM//TaTP/02o0/9VsNv/Wbjf/13A4/9lzOf/YcDT/2G8x/9lu
        Lv/bcjH/3HUz/954Nv/gfDj/4X87/+OCPf/khD//5YdA/+aJQv/nikP/54tD/+eLRP/ni0P/54pC/+qQ
        Qf/3pkH/yWkw/wAAADoAAAATq1En//jFif/RZTL/0Wcz/9JoNP/TajT/1Gs1/9ZtN//Wbzf/2HE5/9l0
        Ov/adjv/23g8/9x3Of/cdzf/3Xc2/954Nv/fezj/4X46/+KAPP/jgj3/5IQ+/+SFP//lhkD/5YZA/+WF
        QP/khT//6Iw///alQP/HZy//AAAAOgAAABOqUSf/+MWJ/9BkMv/RZjL/0mc0/9NpNP/TazX/1Ww2/9Zu
        N//XcDj/2HI5/9l0Ov/adzz/3Hk+/917P//efkD/339B/+B/QP/hgUD/4YE//+KCQP/ihEH/44VC/+OF
        Qv/jhUL/44VB/+OFQ//ojUP/9qZF/8ZmL/8AAAA6AAAAE6lQJ//4xYn/4I5c/9t9SP/bfkj/3IBJ/9yB
        Sv/dgkr/3oNL/9+FTP/ghk3/4YhO/9l1Ov/adzz/3Hk+/917P//dfUD/339B/+WKQv/mi0P/54xE/+eN
        Rf/njUX/545F/+eORf/njkX/541E/+uSQ//2pUL/xGUu/wAAADUAAAARqU8n//O+g//4xYn/+MWJ//jF
        if/4xon/+MaJ//jGif/5xon/+ceK//nHiv/5x4r/2HM6/9l1O//adzz/23g9/9x6Pv/dfD//+Ltv//rJ
        i//6yov/+sqL//rKjP/7yoz/+8qM//vKi//6yov/+smL//fDhf/CYy7/AAAAIgAAAAqnTiaBqVAn/6tR
        J/+tUyj/rlQo/7BVKf+xVin/s1cq/7RYKv+2Wir/t1sr//nHiv/XcTn/2HM6/9l0Ov/adjv/23c9/9x5
        Pv/0o0H/wWIu/8FjLv/CYy7/wmMu/8JjLv/CYy7/wmMu/8JjLv/BYy7/wWIu/7ZcK4gAAAAKAAAAAgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC2Wir/+ceK/9ZwOP/XcTn/2HI5/9l0
        Ov/ZdTv/2nY8//SiQP+/YS3/AAAAOgAAABMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALRYKv/5xon/1W03/9Zv
        OP/WcDj/13E5/9hyOf/Zczr/86FA/71fLP8AAAA6AAAAEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAs1cq//jG
        if/UbDb/1W02/9ZuN//WcDj/13A4/9dxOf/zoD//u14s/wAAADoAAAATAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACxVin/+MaJ/9NqNf/Uazb/1Gw2/9VtN//Wbzf/1m84//KgP/+5XCv/AAAAOgAAABMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAALBVKf/4xon/0mk0/9NqNf/TajX/1Gs2/9RsNv/VbTb/8p8//7dbK/8AAAA6AAAAEwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAArlQo//jGif/RZzP/0mg0/9NpNP/TajX/02o1/9NrNf/ynj7/tVkq/wAA
        ADoAAAATAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsUij/+MWJ/9FmM//RZjP/0Wcz/9JoNP/SaTT/02k0//Ge
        Pv+zWCr/AAAAOgAAABMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK9YLf/4xYn/4I5c/9t+SP/bfkj/235J/9t/
        Sf/bf0n/86dR/7FWKf8AAAA1AAAAEQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArlct//O+g//4xYn/+MWJ//jF
        if/4xYn/+MaJ//jGif/zv4P/r1Up/wAAACIAAAAKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACnTiaBqE8n/6lQ
        J/+qUCf/q1En/6tRJ/+sUij/rFIo/61TKP+kTiaIAAAACgAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/8AD///AA///wAP//8AD///AA///wAP//8AD///AA///wAP//8AD/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/AA///wAP//8AD///A
        A///wAP//8AD///AA///wAP//8AD///AA/8=
</value>
  </data>
</root>