<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABILAAASCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEwAAACcAAAApAAAAKQAA
        ACkAAAASAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgAAAA9AAAATAAA
        AE0AAABNAAAATQAAAD4AAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYCQkJT8XE
        xMT7+/v///////////+jo6P/WFdXhAAAAC0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAkJ
        CU/GxcXF9/f3/4CAf/8kJCT/Tk5O/9fX1/+jo6P/AAAATQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ABgJCQlPxsXFxff39/9/f37/JCQk/yQkJP8kJCT/Tk5O//////8AAABNAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAYCQkJT8bFxcX39/f/f39+/yQkJP8kJCT/JCQk/yQkJP8kJCT//////wAAAE0AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAwAAAAWAAAAGwAAABwAAAAcAAAAGQAA
        ABAAAAAGAAAAGAkJCU/GxsXF+Pf3/39/f/8kJCT/JCQk/yQkJP8kJCT/JCQk/21tbf/6+vr+AAAASQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAABYAAAAnAAAANAAAAD0AAABBAAAAQgAA
        AEEAAAA/AAAANwAAACsJCQlPxsbFxfj39/+Af3//JCQk/yQkJP8lJSX/JSUl/yUlJf9tbW3/8/Ly/7i4
        t7MAAAApAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsAAAAoCAgIT0RDQ2Ojo6Od0NDP0d/f
        3uXh4eHp4ODg59jY2Ny3t7eyampqdcfHx8b49/f/gIB//yUlJf8lJSX/JSUl/yYmJv8mJib/bm5t//Pz
        8v+4uLi0AAAALQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKAAAAOERERGPOzc3O9PT0+/Pz
        8//W1tX/wsLC/7a2tv+9vLz/0dHQ//Dv7//5+fn+9/b2/39/f/8mJib/JiYm/yYmJv8nJyf/Jycn/25u
        bv/z8/L/uLi4tAAAAC0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgICAk6bm5uX8vLy++jo
        6P+hoaH/eHh4/3h4eP94eHj/eHh4/3h4eP94eHj/eHh4/46Ojv9+fn7/Jycn/ycnJ/8nJyf/Jycn/ygo
        KP9vb2//8/Py/7i4uLQAAAAtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvlZSUkfr6
        +v7Ly8v/eHh4/3h4eP94eHj/eHh4/42Njf+VlZT/lZWU/3h4eP95eXn/enp6/3t7e/9cXFz/KCgo/ygo
        KP8pKSn/b29v//Pz8/+4uLi0AAAALQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADCws
        LFry8vL7yMjH/3h4eP94eHj/f39//8HAwP/l5OP/7ezr/+3s6//t7Ov/7ezr/8LBwf+Li4v/fn5+/39/
        f/9fX1//KSkp/21tbf/z8/P/uLi4tAAAAC0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAADAwNO0dHR0urq6v94eHj/eHh4/46Ojv/m5eT/7+TZ//bFkv/8s2b//a9e//6wXv/4wor/8dzH/+bl
        5P+pqaj/goKC/4KCgv9qamr/8/Py/7y8vLcAAAAtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAiIiIlb29vb8lJSU/3p6ev+CgoL/5+bl//DSs//1p1b/9ahW//aoV//2qVf/96lY//iq
        WP/4qln/8saY/+3s6/+YmJj/hoaG/42Njf/6+vr/hIODgwAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAXoqGhm/Dw8P98fHz/fX19/8TEw//u3s//7Z9P/+2gT//uoFD/7qFQ/++h
        Uf/volH/8KNS//GjUv/xpFP/7tW7/9rZ2P+JiYn/ioqK/9/e3v/Q0M/RAwMDTgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACnPz8/P1dXV/39/f/+Hh4f/7+/u/+eze//lmEj/5ZhI/+aZ
        Sf/mmkn/55pK/+ebSv/om0v/6ZxL/+mcTP/qpmD/7ezr/56env+NjY3/u7u7/+np6fIRERFSAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAM97e3uS+vr7/goKC/56env/w7+//3JBB/92R
        Qf/dkUH/3pJC/96SQv/fk0P/35ND/+CURP/hlET/4ZVF/+KVRf/r3Mz/vr69/5CQkP+pqan/7+7u9yAg
        IFYAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA76enp8re2tv+FhYX/u7u7/+rc
        zf/UiTr/1Yk6/9aKO//Wijv/14s8/9eLPP/YjD3/2Iw9/9mNPv/ajj7/2o4//+nVwf/AwL//k5OT/6am
        pv/w8PD3JCQkWAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADvp6enyuLi4/4mJ
        if+qqqn/7unk/8yBM//NgjP/zoI0/86DNP/PgzX/z4Q1/9CFNv/QhTb/0YY3/9KGN//Shzj/6NTA/8LB
        wf+Wlpb/qqqq/+/v7vcbGxtVAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKM7O
        zs7T0tL/jIyM/5+fn//x8fH/yolF/8V7Lf/Gey3/yoQ7//Tm2P//////68+x/+fHpP/79/L/yn8x/8p/
        Mf/s6OL/ubm5/5mZmf+8vLz/7Ozs9AwMDFAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAeuLi4suno6P+Pj4//kJCQ/+Xl5f/Xsoz/vXMm/750Jv/XqHj/////////////////48Oh/+vT
        u//Cdyr/1KR0/+rp6f+hoaH/nJyc/9bW1v/S0tLVAAAAKwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAZERERi/v7+/5KSkv+Tk5P/sbGx//Ly8v/BhUf/tmwg/8SISf////////////r1
        8f+5byL/uW8i/8SISv/s6OP/x8fG/5+fn/+fn5//9vb2/5STk48AAAATAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADHc29vg29vb/5aWlv+Xl5f/0NDQ/+3p5P/No3j/r2UZ/8OM
        Uv/Wsov/uno3/7FoG//Gk1//7ejj/9PS0v+hoaH/oqKi/8jIyP/19PT8ERERUgAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEWZmZnH8/Pz/sLCw/5qamv+bm5v/wcHB/+zs
        7P/p4Nb/17yf/86qhP/XvJ//6d/W//Hx8f/Pz8//o6Oj/6SkpP+qqqr/9/b2/62traYAAAAlAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALcvLy8v39/f/r6+v/56e
        nv+fn5//paWl/8TExP/U1NT/3t7e/9nZ2f/Gxsb/rq6u/6Wlpf+mpqb/rKur//Lx8f/d3d3iAwMDTgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAAAALdPT
        09X6+vr/0dHR/6Kiov+jo6P/pKSk/6SkpP+lpaX/pqam/6enp/+np6f/qKio/8zMzP/49/f/3Nzc4jIy
        MlwAAAASAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAMAAAALZeXl5H08/P89/b2/9nZ2f+6urr/p6en/6enp/+oqKj/u7u7/9fW1v/19fX/9fX1+6qq
        qqIAAAAxAAAAEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAAEOXl5eR29vb4O/v7/f////////////////v7+/33Nvb4Kio
        qKADAwNOAAAAJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAAwAAAAPwAAAE0AAABNAAAATQAA
        AD8AAAAxAAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////////gf///wD///4A///8AP//+AD///AA/8AAAP8AAAD+AAAB/AA
        AA/gAAAf4AAAP8AAAH/AAAD/gAAA/4AAAP+AAAB/gAAAf4AAAH+AAAB/gAAAf4AAAP+AAAD/wAAA/8AA
        Af/gAAP/4AAD//AAB//8AB///wB///////8=
</value>
  </data>
</root>